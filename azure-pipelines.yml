trigger:
- master

pool:
    vmImage: 'Ubuntu-16.04'
# ...Stage and Job setup
# Perform unit and integration testing with normal Maven package or verify goal
steps:
- task: Maven@3
  #displayName: Maven build
  inputs:
      mavenPomFile: 'pom.xml'
      goals: 'package'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      testRunTitle: 'Running unit tests!!!'
      codeCoverageToolOption: 'JaCoCo'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false

# Setup docker-compose simulation environment. Environment includes schema registry, zookeeper, kafka
and SUT
steps:
- task: DockerCompose@0
#displayName: Setup E2E Environment
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up -d'
    # Perform end-to-end test using zerocode or equivalent framework

# After end-to-end testing completes, teardown simulation environment
steps:
- task: DockerCompose@0
#displayName: Teardown E2E environment
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'down'